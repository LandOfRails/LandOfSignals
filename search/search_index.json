{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the LandOfSignals Documentation","text":"<p>Welcome to the official documentation for the LandOfSignals mod. This guide is designed to help you understand how to install, configure, and effectively use the mod and its content pack systems in your Minecraft world.</p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ul> <li>Installation</li> <li>Getting Started with LandOfSignals</li> <li>Using the Mod</li> <li>Content Pack Systems</li> <li>Creating Content Packs for V1</li> <li>Creating Content Packs for V2</li> <li>Advanced Configuration</li> <li>Troubleshooting</li> <li>Contributing</li> <li>Support and Community</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Learn how to install LandOfSignals and its dependencies to get started with enhancing your Minecraft railway systems.</p>"},{"location":"#getting-started-with-landofsignals","title":"Getting Started with LandOfSignals","text":"<p>Discover the basics of using LandOfSignals, including an overview of its features and how to navigate the mod's interface.</p>"},{"location":"#using-the-mod","title":"Using the Mod","text":"<p>Detailed instructions on how to use the various signals, items, and functionalities added by LandOfSignals.</p>"},{"location":"#content-pack-systems","title":"Content Pack Systems","text":"<p>Explore how to create and use content packs with LandOfSignals, enhancing the customization and variety of your railway systems.</p>"},{"location":"#creating-content-packs-for-v1","title":"Creating Content Packs for V1","text":"<p>Step-by-step guide on creating content packs compatible with version 1 of the mod. Learn more.</p>"},{"location":"#creating-content-packs-for-v2","title":"Creating Content Packs for V2","text":"<p>Instructions on developing content packs for version 2 of LandOfSignals, including advanced features and tips. Learn more.</p>"},{"location":"#advanced-configuration","title":"Advanced Configuration","text":"<p>Customize your experience with LandOfSignals by adjusting mod settings and exploring advanced features.</p>"},{"location":"#troubleshooting","title":"Troubleshooting","text":"<p>Solutions to common issues encountered while using LandOfSignals. For further assistance, visit our GitHub repository or join our Discord community.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Interested in contributing to the LandOfSignals project? Find out how you can help improve the mod and its documentation.</p>"},{"location":"#support-and-community","title":"Support and Community","text":"<p>Join our Discord community for support, to share content packs, and to connect with other LandOfSignals users.</p>"},{"location":"HowToUse/","title":"How to Use LandOfSignals","text":"<p>Welcome to the LandOfSignals mod! This guide will walk you through the installation, configuration, and usage of the mod, as well as how to create and use content packs.</p>"},{"location":"HowToUse/#installation","title":"Installation","text":"<ol> <li>Ensure you have Minecraft Forge installed.</li> <li>Download the LandOfSignals mod from the official CurseForge page.</li> <li>Place the downloaded <code>.jar</code> file into your <code>Minecraft/mods</code> folder.</li> <li>Launch Minecraft and select the Forge profile.</li> </ol>"},{"location":"HowToUse/#configuration","title":"Configuration","text":"<p>LandOfSignals comes with various configuration options to tailor the mod to your liking. These can be found in the <code>config/landofsignals.toml</code> file. Here you can enable or disable specific features and adjust mod settings.</p>"},{"location":"HowToUse/#using-the-mod","title":"Using the Mod","text":"<p>To use the mod, you'll need to familiarize yourself with the different types of signals and tools provided:</p> <ul> <li>Signal Selector: Used to select the type of signal you want to place.</li> <li>Connector Tool: Connects signals to signal boxes for control.</li> <li>Signal Box: Controls the state of connected signals.</li> </ul>"},{"location":"HowToUse/#placing-signals","title":"Placing Signals","text":"<ol> <li>Select a signal using the Signal Selector.</li> <li>Right-click on the ground or a suitable surface to place the signal.</li> <li>Use the Connector Tool to link the signal to a Signal Box.</li> <li>Right-click the Signal Box and configure the signal state as desired.</li> </ol>"},{"location":"HowToUse/#creating-content-packs","title":"Creating Content Packs","text":"<p>Content packs allow you to add new signals and assets to the game. To create a content pack:</p> <ol> <li>Create a new directory in <code>Minecraft/config/landofsignals/contentpacks</code>.</li> <li>Inside this directory, create a <code>pack.json</code> file with your pack's metadata.</li> <li>Add your assets and define them in the <code>pack.json</code> file. Refer to the Content Pack Documentation for detailed instructions.</li> </ol>"},{"location":"HowToUse/#community-and-support","title":"Community and Support","text":"<p>Join our Discord community for support, to share your content packs, or to connect with other users. Our community is always ready to help with any questions or issues you might encounter.</p> <p>Thank you for using LandOfSignals!</p>"},{"location":"ContentPackV1/ContentPacksV1/","title":"Creating and Updating Content Packs for LandOfSignals V1","text":"<p>This guide provides instructions for creating and updating content packs for version 1 of the LandOfSignals mod, ensuring compatibility and integration with the mod's features and theme.</p>"},{"location":"ContentPackV1/ContentPacksV1/#content-pack-structure-and-specifications","title":"Content Pack Structure and Specifications","text":"<p>A content pack for LandOfSignals V1 should include:</p> <ul> <li><code>pack.json</code>: Contains metadata about the content pack, including name, version, author, and description.</li> <li><code>assets</code>: A directory with models, textures, and other necessary assets.</li> </ul>"},{"location":"ContentPackV1/ContentPacksV1/#packjson-structure","title":"pack.json Structure","text":"<p>Example <code>pack.json</code> file:</p> <pre><code>{\n  \"name\": \"My Custom Content Pack\",\n  \"version\": \"1.0\",\n  \"author\": \"YourName\",\n  \"description\": \"A detailed description of your content pack.\"\n}\n</code></pre>"},{"location":"ContentPackV1/ContentPacksV1/#assets-organization","title":"Assets Organization","text":"<p>Assets should be organized into subdirectories within the <code>assets</code> folder:</p> <ul> <li><code>assets/models</code>: For 3D models of signals and signs.</li> <li><code>assets/textures</code>: For textures applicable to the models.</li> </ul>"},{"location":"ContentPackV1/ContentPacksV1/#creating-a-signal","title":"Creating a Signal","text":"<p>To create a custom signal:</p> <ol> <li>Model your signal using 3D modeling software capable of exporting to the OBJ format.</li> <li>Create and apply textures to your model.</li> <li>Organize your model and textures in the <code>assets</code> directory accordingly.</li> <li>Define your signal in a JSON file within <code>assets/models</code>.</li> </ol>"},{"location":"ContentPackV1/ContentPacksV1/#signal-definition-example","title":"Signal Definition Example","text":"<p>Example JSON definition for a signal:</p> <pre><code>{\n  \"id\": \"custom_signal_v1\",\n  \"name\": \"Custom Signal V1\",\n  \"model\": \"models/custom_signal_v1.obj\",\n  \"textures\": {\n    \"texture\": \"textures/custom_signal_v1.png\"\n  }\n}\n</code></pre>"},{"location":"ContentPackV1/ContentPacksV1/#best-practices-for-content-pack-creation","title":"Best Practices for Content Pack Creation","text":"<ul> <li>Maintain organization within your content pack for ease of management.</li> <li>Use descriptive names for models, textures, and assets.</li> <li>Thoroughly test your content pack for compatibility and performance.</li> </ul>"},{"location":"ContentPackV1/ContentPacksV1/#sharing-and-community-support","title":"Sharing and Community Support","text":"<p>After creating your content pack, you can share it with the LandOfSignals community. Include a README file with installation and usage instructions. Join our Discord community for support, feedback, and to share your content packs with other users.</p>"},{"location":"ContentPackV2/ContentPacksV2/","title":"Creating your own V2 contentpacks","text":"<p>Your contentpacks is made up from multiple parts, you can find a short description and the documentation here:</p> <ul> <li> <p> landofsignals.json (required)</p> <p>This file contains the name, author, version of your contentpack. It also contains links to your blocks or contentsets.</p> <p> Header documentation</p> </li> </ul> <ul> <li> <p> Signal</p> <p></p> <p>This is a simple signal, it has a more strict and simpler structure. It is more performance-friendly and requires fewer lines. It has only one controllable group and the model can only be changed via its texture. If this suits your needs, this is the preferable option.</p> <p> Signal documentation</p> </li> <li> <p> Complex signal</p> <p></p> <p>This is a complex signal, its flexible and opens a lot of options. It is less performance-friendly and needs a lot more lines. It can have multiple independently controllable groups. The state can be changed via texture, obj-groups or with different objs. If you have a model/multiple models or want to create a complex block, this is your best option.</p> <p> Complex signal documentation</p> </li> <li> <p> Asset/Deco</p> <p></p> <p>Blocks that are not supposed to have any functionality can be added as a DECO block. They have their own creative tab.</p> <p> Asset/Deco documentation</p> </li> <li> <p> Sign</p> <p></p> <p>Signs are similar to assets/deco blocks, they have their own creative tab. They are supposed to support text-input in the future. (TBD see #120)</p> <p> Sign documentation</p> </li> <li> <p> Signalbox</p> </li> <li> <p> Lever</p> <p></p> <p>The newest addition: Levers! If you want to add a custom lever/switch that emits redstone when active, this is it. It is similar to the signs and assets/deco - difference: You have to state an active and inactive state.</p> <p> Lever documentation</p> </li> </ul> <ul> <li> <p> Flares (optional, nice to have)</p> <p> </p> <p>If your model contains lamps or other parts that are supposed to glow, this is the right place. Flares are oriented to your models and light up when the right state is set. They can be added to signals, complex signals, deco/assets, signs and levers.</p> <p> Header documentation</p> </li> </ul> <ul> <li> <p> Contentsets (optional)</p> <p>This is its own file containing more blocks. It does not contain any logic, the only advantage is that you can group different blocks in your contentpack that belong together. It can help with keeping an overview, depending on the amount of blocks you want to add.</p> <p> Contentset documentation</p> </li> </ul>"},{"location":"ContentPackV2/ContentPacksV2/#_1","title":"Creating your own V2 contentpacks","text":"<p>Signalboxes are similar to assets/deco blocks. They can be connected to (complex) signals to control them.</p> <p> Sign documentation</p>"},{"location":"ContentPackV2/Content/ComplexSignal/","title":"ComplexSignals (BLOCKCOMPLEXSIGNAL)","text":""},{"location":"ContentPackV2/Content/ComplexSignal/#description","title":"Description","text":"<p>This is a more flexible signal, it is more complex but lets you do way more with the signal than the BLOCKSIGNAL.  Signal documentation</p>"},{"location":"ContentPackV2/Content/ComplexSignal/#structure","title":"Structure","text":"<p>Information regarding the structure</p> <p>Multiple OBJs, Base and References can be used for single and multiple signals as well. The following example show a few possibilities, but there are more constellations possible.</p> Single group+ references+ base+ multiple OBJsMultiple groups&amp; baseEverything singlegroup.json<pre><code>{\n  \"id\": \"simple-single-lamp\", // (1)!\n  \"name\": \"Simple Single Lamp Signal\", // (2)!\n  \"rotationSteps\": 10, // (3)!\n  \"signals\": { // (4)!\n    \"main_lamp\": { // (5)!\n      \"groupName\": \"Main lamp\", // (6)!\n      \"states\": { // (7)!\n        \"off\": { // (8)!\n          \"signalName\": \"Off\", // (9)!\n          \"models\": { // (10)!\n            \"singlelampsignal/singlelampsignal.obj\": [ // (11)!\n              {\n                \"textures\": \"off\", // (12)!\n                \"item\": { // (13)!\n                  \"DEFAULT\": { // (14)!\n                    \"translation\": [ // (15)!\n                      0.625,\n                      0.125,\n                      0\n                    ],\n                    \"rotation\": [ // (16)!\n                      0,\n                      180,\n                      0\n                    ],\n                    \"scaling\": [ // (17)!\n                      0.8,\n                      0.8,\n                      0.8\n                    ]\n                  }\n                },\n                \"block\": { // (18)!\n                  \"translation\": [ // (19)!\n                    0.5,\n                    0,\n                    0.5\n                  ],\n                  \"rotation\": [ // (20)!\n                    0,\n                    180,\n                    0\n                  ],\n                  \"scaling\": [ // (21)!\n                    1,\n                    1,\n                    1\n                  ]\n                }\n              }\n            ]\n          }\n        },\n        \"white\": {\n          \"signalName\": \"White\",\n          \"models\": {\n            \"singlelampsignal/singlelampsignal.obj\": [\n              {\n                \"textures\": \"white\",\n                \"item\": {\n                  \"DEFAULT\": {\n                    \"translation\": [\n                      0.625,\n                      0.125,\n                      0\n                    ],\n                    \"rotation\": [\n                      0,\n                      180,\n                      0\n                    ],\n                    \"scaling\": [\n                      0.8,\n                      0.8,\n                      0.8\n                    ]\n                  }\n                },\n                \"block\": {\n                  \"translation\": [\n                    0.5,\n                    0,\n                    0.5\n                  ],\n                  \"rotation\": [\n                    0,\n                    180,\n                    0\n                  ],\n                  \"scaling\": [\n                    1,\n                    1,\n                    1\n                  ]\n                }\n              }\n            ]\n          }\n        },\n        \"red\": {\n          \"signalName\": \"Red\",\n          \"models\": {\n            \"singlelampsignal/singlelampsignal.obj\": [\n              {\n                \"textures\": \"red\",\n                \"item\": { //\n                  \"DEFAULT\": {\n                    \"translation\": [\n                      0.625,\n                      0.125,\n                      0\n                    ],\n                    \"rotation\": [\n                      0,\n                      180,\n                      0\n                    ],\n                    \"scaling\": [\n                      0.8,\n                      0.8,\n                      0.8\n                    ]\n                  }\n                },\n                \"block\": {\n                  \"translation\": [\n                    0.5,\n                    0,\n                    0.5\n                  ],\n                  \"rotation\": [\n                    0,\n                    180,\n                    0\n                  ],\n                  \"scaling\": [\n                    1,\n                    1,\n                    1\n                  ]\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre> <ol> <li> <p>The identifier of the block and item.</p> <p>Required field!</p> <p>Needs to be unique!If more than one block within the same contentpack has the same id, only one will be loaded.</p> <p>Should not be changed!Changing the id will break existing blocks.</p> </li> <li> <p>The name of the block and item.</p> <p>Required field!</p> <p>Can be changed later on.Does not have to be unique, although that helps.</p> </li> <li> <p>The steps in which the block can be rotated.</p> <p>Optional field.</p> <p>Default value: 10Allowed values: 10 - 90</p> <p>Can be changed later on.</p> </li> <li> <p>Includes all the groups your signal has.Groups are independent parts of your signal.One signalbox can only control one independent part.Groups do not interact with each other.</p> <p>Required field!Needs atleast one entry.</p> <p></p> <p>Should be able to be changed later on. (Not tested!)</p> <p>Adding new groups is no issue.</p> <p>Removing groups may break existing blocks.</p> </li> <li> <p>A group that can be selected by a signalbox</p> <p>Required field!</p> <p>Should not be changed!</p> <p>Changing the group id will most likely break existing blocks.</p> </li> <li> <p>The name of this group</p> <p>Required field!</p> <p> </p> <p>Can be changed later on.</p> </li> <li> <p>The different states this group has</p> <p>Required field!Needs atleast one entry.</p> <p>The order of the states is important as they overwrite each other.</p> <p>The first state is the lowest and the last state the highest in priority. The first state will also be the default state for the item and for a newly placed block. The order can be changed for each placed block individually by clicking on it.</p> <p>Can be changed later on.</p> <p>Adding new states is no issue.</p> <p>Removing states may break existing blocks.</p> </li> <li> <p>The identifier of the state</p> <p>Required field!</p> <p>Should not be changed!</p> <p>Changing the state id will most likely break existing blocks.</p> </li> <li> <p>The name of the state</p> <p>Required field!</p> <p></p> <p>Can be changed later on.</p> </li> <li> <p>List of all the OBJ files you want to use.</p> <p>Required field!</p> <p>Atleast one entry is required!</p> <p>In this example only a single obj file is used. Look at '+ multiple OBJs' for another example.</p> <p>Can be changed later on.</p> <p>This may cause the UniversalModCore cache to break.You can try to delete the <code>/cache/landofsignals/</code> folder in your minecraft instance.</p> </li> <li> <p>The path to the OBJ you want to use. </p> <p>Required field!</p> <p>Path does not require <code>/assets/landofsignals/</code>.</p> <p>The name and content of the file can be changed later on.</p> <p>This may cause the UniversalModCore cache to break.You can try to delete the <code>/cache/landofsignals/</code> folder in your minecraft instance.</p> </li> <li> <p>The name of the folder containing the correct textures for this OBJ and state.</p> <p>Optional field.</p> <p>Will use the textures within the same folder as the OBJ when not specified.</p> <p>The name and content of the file can be changed later on.</p> <p>This may cause the UniversalModCore cache to break.You can try to delete the <code>/cache/landofsignals/</code> folder in your minecraft instance.</p> </li> <li> <p>Contains properties like translation, rotation and/or scaling for the item</p> <p>Optional field.</p> </li> <li> <p>Place where the item should be rendered.</p> <p>Optional field.</p> <p>Allowed properties</p> <p>DEFAULT THIRD_PERSON_LEFT_HAND THIRD_PERSON_RIGHT_HAND FIRST_PERSON_LEFT_HAND FIRST_PERSON_RIGHT_HAND HEAD GUI ENTITY FRAME</p> <p>Can be changed later on.</p> </li> <li> <p>The translation of the item.</p> <p>Optional field.</p> <p>Default value: 0.5, 0.5, 0.5</p> <p>Is affected by <code>scaling</code> as <code>translation</code> happens afterward.</p> <p>Affects <code>rotation</code> as <code>translation</code> happens beforehand.</p> <p>Can be changed later on.</p> </li> <li> <p>The rotation of the item.</p> <p>Optional field.</p> <p>Default value: 0, 0, 0</p> <p>Is affected by <code>scaling</code> and <code>translation</code> as <code>rotation</code> happens afterward.</p> <p>Can be changed later on.</p> </li> <li> <p>The scaling of the item.</p> <p>Optional field.</p> <p>Default value: 1, 1, 1</p> <p>Affects <code>translation</code> and <code>rotation</code> as <code>scaling</code> happens beforehand.</p> <p>Can be changed later on.</p> </li> <li> <p>Contains properties like translation, rotation and/or scaling for the block</p> <p>Optional field.</p> </li> <li> <p>The translation of the block.</p> <p>Optional field.</p> <p>Default value: 0.5, 0.5, 0.5</p> <p>Is affected by <code>scaling</code> as <code>translation</code> happens afterward.</p> <p>Affects <code>rotation</code> as <code>translation</code> happens beforehand.</p> <p>Can be changed later on.</p> <p>May screw up the positioning of existing blocks.</p> </li> <li> <p>The rotation of the block.</p> <p>Optional field.</p> <p>Default value: 0, 0, 0</p> <p>Is affected by <code>scaling</code> and <code>translation</code> as <code>rotation</code> happens afterward.</p> <p>Can be changed later on.</p> <p>May screw up the positioning of existing blocks.</p> </li> <li> <p>The scaling of the block.</p> <p>Optional field.</p> <p>Default value: 1, 1, 1</p> <p>Affects <code>translation</code> and <code>rotation</code> as <code>scaling</code> happens beforehand.</p> <p>Can be changed later on.</p> <p>May screw up the positioning of existing blocks.</p> </li> </ol> singlegroup-ref.json<pre><code>{\n  \"id\": \"simple-single-lamp\", // (1)!\n  \"name\": \"Simple Single Lamp Signal\", // (2)!\n  \"rotationSteps\": 10, // (3)!\n  \"references\": {\n    \"contentPackItemRefs\": {\n      \"defaultItem\": {\n        \"translation\": [ // (15)!\n          0.625,\n          0.125,\n          0\n        ],\n        \"rotation\": [ // (16)!\n          0,\n          180,\n          0\n        ],\n        \"scaling\": [ // (17)!\n          0.8,\n          0.8,\n          0.8\n        ]\n      }\n    },\n    \"contentPackBlockRefs\": {\n      \"defaultBlock\": {\n        \"translation\": [ // (19)!\n          0.5,\n          0,\n          0.5\n        ],\n        \"rotation\": [ // (20)!\n          0,\n          180,\n          0\n        ],\n        \"scaling\": [ // (21)!\n          1,\n          1,\n          1\n        ]\n      }\n    }\n  },\n  \"signals\": { // (4)!\n    \"main_lamp\": { // (5)!\n      \"groupName\": \"Main lamp\", // (6)!\n      \"states\": { // (7)!\n        \"off\": { // (8)!\n          \"signalName\": \"Off\", // (9)!\n          \"models\": { // (10)!\n            \"singlelampsignal/singlelampsignal.obj\": [ // (11)!\n              {\n                \"textures\": \"off\", // (12)!\n                \"itemRefs\": {\n                  \"DEFAULT\": \"defaultItem\"\n                },\n                \"blockRef\": \"defaultBlock\"\n              }\n            ]\n          }\n        },\n        \"white\": {\n          \"signalName\": \"White\",\n          \"models\": {\n            \"singlelampsignal/singlelampsignal.obj\": [\n              {\n                \"textures\": \"white\",\n                \"itemRefs\": {\n                  \"DEFAULT\": \"defaultItem\"\n                },\n                \"blockRef\": \"defaultBlock\"\n              }\n            ]\n          }\n        },\n        \"red\": {\n          \"signalName\": \"Red\",\n          \"models\": {\n            \"singlelampsignal/singlelampsignal.obj\": [\n              {\n                \"textures\": \"red\",\n                \"itemRefs\": {\n                  \"DEFAULT\": \"defaultItem\"\n                },\n                \"blockRef\": \"defaultBlock\"\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre> <ol> <li> <p>The identifier of the block and item.</p> <p>Required field!</p> <p>Needs to be unique!If more than one block within the same contentpack has the same id, only one will be loaded.</p> <p>Should not be changed!Changing the id will break existing blocks.</p> </li> <li> <p>The name of the block and item.</p> <p>Required field!</p> <p>Can be changed later on.Does not have to be unique, although that helps.</p> </li> <li> <p>The steps in which the block can be rotated.</p> <p>Optional field.</p> <p>Default value: 10Allowed values: 10 - 90</p> <p>Can be changed later on.</p> </li> <li> <p>Includes all the groups your signal has.Groups are independent parts of your signal.One signalbox can only control one independent part.Groups do not interact with each other.</p> <p>Required field!Needs atleast one entry.</p> <p></p> <p>Should be able to be changed later on. (Not tested!)</p> <p>Adding new groups is no issue.</p> <p>Removing groups may break existing blocks.</p> </li> <li> <p>A group that can be selected by a signalbox</p> <p>Required field!</p> <p>Should not be changed!</p> <p>Changing the group id will most likely break existing blocks.</p> </li> <li> <p>The name of this group</p> <p>Required field!</p> <p> </p> <p>Can be changed later on.</p> </li> <li> <p>The different states this group has</p> <p>Required field!Needs atleast one entry.</p> <p>The order of the states is important as they overwrite each other.</p> <p>The first state is the lowest and the last state the highest in priority. The first state will also be the default state for the item and for a newly placed block. The order can be changed for each placed block individually by clicking on it.</p> <p>Can be changed later on.</p> <p>Adding new states is no issue.</p> <p>Removing states may break existing blocks.</p> </li> <li> <p>The identifier of the state</p> <p>Required field!</p> <p>Should not be changed!</p> <p>Changing the state id will most likely break existing blocks.</p> </li> <li> <p>The name of the state</p> <p>Required field!</p> <p></p> <p>Can be changed later on.</p> </li> <li> <p>List of all the OBJ files you want to use.</p> <p>Required field!</p> <p>Atleast one entry is required!</p> <p>In this example only a single obj file is used. Look at '+ multiple OBJs' for another example.</p> <p>Can be changed later on.</p> <p>This may cause the UniversalModCore cache to break.You can try to delete the <code>/cache/landofsignals/</code> folder in your minecraft instance.</p> </li> <li> <p>The path to the OBJ you want to use. </p> <p>Required field!</p> <p>Path does not require <code>/assets/landofsignals/</code>.</p> <p>The name and content of the file can be changed later on.</p> <p>This may cause the UniversalModCore cache to break.You can try to delete the <code>/cache/landofsignals/</code> folder in your minecraft instance.</p> </li> <li> <p>The name of the folder containing the correct textures for this OBJ and state.</p> <p>Optional field.</p> <p>Will use the textures within the same folder as the OBJ when not specified.</p> <p>The name and content of the file can be changed later on.</p> <p>This may cause the UniversalModCore cache to break.You can try to delete the <code>/cache/landofsignals/</code> folder in your minecraft instance.</p> </li> <li> <p>Contains properties like translation, rotation and/or scaling for the item</p> <p>Optional field.</p> </li> <li> <p>Place where the item should be rendered.</p> <p>Optional field.</p> <p>Allowed properties</p> <p>DEFAULT THIRD_PERSON_LEFT_HAND THIRD_PERSON_RIGHT_HAND FIRST_PERSON_LEFT_HAND FIRST_PERSON_RIGHT_HAND HEAD GUI ENTITY FRAME</p> <p>Can be changed later on.</p> </li> <li> <p>The translation of the item.</p> <p>Optional field.</p> <p>Default value: 0.5, 0.5, 0.5</p> <p>Is affected by <code>scaling</code> as <code>translation</code> happens afterward.</p> <p>Affects <code>rotation</code> as <code>translation</code> happens beforehand.</p> <p>Can be changed later on.</p> </li> <li> <p>The rotation of the item.</p> <p>Optional field.</p> <p>Default value: 0, 0, 0</p> <p>Is affected by <code>scaling</code> and <code>translation</code> as <code>rotation</code> happens afterward.</p> <p>Can be changed later on.</p> </li> <li> <p>The scaling of the item.</p> <p>Optional field.</p> <p>Default value: 1, 1, 1</p> <p>Affects <code>translation</code> and <code>rotation</code> as <code>scaling</code> happens beforehand.</p> <p>Can be changed later on.</p> </li> <li> <p>Contains properties like translation, rotation and/or scaling for the block</p> <p>Optional field.</p> </li> <li> <p>The translation of the block.</p> <p>Optional field.</p> <p>Default value: 0.5, 0.5, 0.5</p> <p>Is affected by <code>scaling</code> as <code>translation</code> happens afterward.</p> <p>Affects <code>rotation</code> as <code>translation</code> happens beforehand.</p> <p>Can be changed later on.</p> <p>May screw up the positioning of existing blocks.</p> </li> <li> <p>The rotation of the block.</p> <p>Optional field.</p> <p>Default value: 0, 0, 0</p> <p>Is affected by <code>scaling</code> and <code>translation</code> as <code>rotation</code> happens afterward.</p> <p>Can be changed later on.</p> <p>May screw up the positioning of existing blocks.</p> </li> <li> <p>The scaling of the block.</p> <p>Optional field.</p> <p>Default value: 1, 1, 1</p> <p>Affects <code>translation</code> and <code>rotation</code> as <code>scaling</code> happens beforehand.</p> <p>Can be changed later on.</p> <p>May screw up the positioning of existing blocks.</p> </li> </ol> <ul> <li>Lorem ipsum</li> </ul> <ul> <li>Lorem ipsum</li> </ul> <ul> <li>Lorem ipsum</li> </ul> <ul> <li>Lorem ipsum</li> </ul> <ul> <li>Lorem ipsum</li> </ul>"},{"location":"ContentPackV2/Content/ComplexSignal/#states","title":"States","text":""},{"location":"ContentPackV2/Content/ComplexSignal/#implementation","title":"Implementation","text":""},{"location":"ContentPackV2/Content/ComplexSignal/#sorting-priorities-and-overwriting-of-states","title":"Sorting, priorities and overwriting of states","text":""},{"location":"ContentPackV2/Content/ComplexSignal/#flares","title":"Flares","text":"<ul> <li> <p> Flares (optional, nice to have)</p> <p> </p> <p>If your model contains lamps or other parts that are supposed to glow, this is the right place. Flares are oriented to your models and light up when the right state is set. They can be added to signals, complex signals, deco/assets, signs and levers.</p> <p> Flare documentation</p> </li> </ul>"},{"location":"ContentPackV2/Content/Flares/","title":"Flares","text":"<p>Documentation to be created (#133)</p>"},{"location":"ContentPackV2/Content/Header/","title":"Header (landofsignals.json)","text":""},{"location":"ContentPackV2/Content/Header/#description","title":"Description","text":"<p>The first thing you'll need to create a contentpack is the <code>landofsignals.json</code>. It contains all the vitale information needed for LandOfSignals to add your content to the game. It contains the name, author, packversion and addonversion of your pack as well as the links to the blocks.</p> Example folders and files <pre><code>my-contentpack-v1.zip/\n    assets/\n        landofsignals/\n            folder1/\n                complexsignal.json/\n                ! TODO Expand with folders and/or OBJ/MTL/PNG files !\n            folder2/\n                signal.json/\n                ! TODO Expand with folders and/or OBJ/MTL/PNG files !\n            folder3/\n                deco.json/\n                ! TODO Expand with folders and/or OBJ/MTL/PNG files !\n            folder4/\n                sign.json/\n                ! TODO Expand with folders and/or OBJ/MTL/PNG files !\n            folder5/\n                signalbox.json/\n                ! TODO Expand with folders and/or OBJ/MTL/PNG files !\n            folder6/\n                lever.json/\n                ! TODO Expand with folders and/or OBJ/MTL/PNG files !\n    landofsignals.json\n</code></pre> <p>The first entries in your ZIP file should be <code>/landofsignals.json</code> (file) and <code>/assets/</code> (directory).There can't be a folder above.</p> <p>While creating and modifying your contentpack, it does not have to be a ZIP file.You can just leave it as a normal folder in the <code>/config/</code> folder of your minecraft instance.If you want to release your contentpack, you should ZIP it like the example shown here.</p>"},{"location":"ContentPackV2/Content/Header/#structure","title":"Structure","text":"landofsignals.json<pre><code>{\n    \"name\": \"My contentpack\", // (1)!\n    \"packversion\": \"1.0\", // (2)!\n    \"author\" : \"John Doe\", // (3)!\n    \"addonversion\": \"2\", // (4)!\n    \"content\": { // (5)!\n        \"assets/landofsignals/folder1/complexsignal.json\": \"BLOCKCOMPLEXSIGNAL\", // (6)!\n        \"assets/landofsignals/folder2/signal.json\": \"BLOCKSIGNAL\",\n        \"assets/landofsignals/folder3/deco.json\": \"BLOCKDECO\",\n        \"assets/landofsignals/folder4/sign.json\": \"BLOCKSIGN\",\n        \"assets/landofsignals/folder5/signalbox.json\": \"BLOCKSIGNALBOX\",\n        \"assets/landofsignals/folder6/lever.json\": \"BLOCKLEVER\"\n    }\n}\n</code></pre> <ol> <li> <p>The name you want your contentpack to have.Preferably something meaningful and descriptive.</p> <p>Needs to be unique!If more than one pack has the same name, only one will be loaded.</p> <p>Should not be changed!Changing the name will break existing blocks.</p> </li> <li> <p>The version of your pack.Choose a format of your liking.There is no validation.</p> </li> <li> <p>The author(s) of the pack. You?No validation as well.</p> </li> <li> <p>The addon-version used.Should be \"2\" (latest)</p> </li> <li> <p>This contains all yours blocks. Can be 1+ entries.</p> <p>The first folders always have to be <code>assets/landofsignals/</code>After that you can choose folders and filenames freely.</p> </li> <li> <p>Each entry (block) consists of the file path and type of block. The json files can be named freely. The shown names are for demonstration purposes.</p> <p>Available types:BLOCKCOMPLEXSIGNAL, BLOCKSIGNAL, BLOCKDECO, BLOCKSIGN, BLOCKSIGNALBOX and BLOCKLEVEROverview and further information ContentPacksV2</p> </li> </ol>"},{"location":"ContentPackV2/Content/Signal/","title":"Signals (BLOCKSIGNAL)","text":""},{"location":"ContentPackV2/Content/Signal/#description","title":"Description","text":"<p>This is a simple signal, it has a more strict and simpler structure. It is more performance-friendly and requires fewer lines. It has only one controllable group and the model can only be changed via its texture. If this suits your needs, this is the preferable option. This is the successor of the previous signals from ContentPacksV1 </p> <p>This will lead you to the old contentpack v1 system: Contentpack V1 documentation</p>"},{"location":"ContentPackV2/Content/Signal/#structure","title":"Structure","text":"signal.json<pre><code>{\n  \"id\": \"pedestrian-light\", // (1)!\n  \"name\": \"Pedestrian light (green/red)\", // (2)!\n  \"model\": \"folder2/pedestrianlight.obj\", // (3)!\n  \"states\": [ // (9)!\n    \"green\", // (10)!\n    \"red\" // (11)!\n  ],\n  \"itemState\": \"red\", // (12)!\n  \"useBase\": true, // (13)!\n  \"base\": \"basetexture\", // (14)!\n  \"rotationSteps\": 10, // (4)!\n  \"translation\": [ // (5)!\n    0.5,\n    0,\n    0.5\n  ],\n  \"itemTranslation\": [ // (6)!\n    0.5,\n    0,\n    0.5\n  ],\n  \"scaling\": [ // (7)!\n    1,\n    1,\n    1\n  ],\n  \"itemScaling\": [ // (8)!\n    1,\n    1,\n    1\n  ]\n}\n</code></pre> <ol> <li> <p>The identifier of the block and item.</p> <p>Required field!</p> <p>Needs to be unique!If more than one block within the same contentpack has the same id, only one will be loaded.</p> <p>Should not be changed!Changing the id will break existing blocks.</p> </li> <li> <p>The name of the block and item.</p> <p>Required field!</p> <p>Can be changed later on.Does not have to be unique, although that helps.</p> </li> <li> <p>The model of your block.</p> <p>Required field!</p> <p>Path does not require <code>/assets/landofsignals/</code>.</p> <p>Currently only *.obj is supported!</p> <p>The name and content of the file can be changed later on.</p> <p>This may cause the UniversalModCore cache to break.You can try to delete the <code>/cache/landofsignals/</code> folder in your minecraft instance.</p> </li> <li> <p>The steps in which the block can be rotated.</p> <p>Optional field.</p> <p>Default value: 10Allowed values: 10 - 90</p> <p>Can be changed later on.</p> </li> <li> <p>The translation of the block.</p> <p>Optional field.</p> <p>Default value: 0,0,0</p> <p>Values higher than 2 might cause issues with the block rendering.</p> <p>Is affected by <code>scaling</code> as <code>translation</code> happens afterward.</p> <p>Can be changed later on.</p> <p>May screw up the positioning of existing blocks.</p> </li> <li> <p>The translation of the item.</p> <p>Optional field.</p> <p>Default value: 0,0,0</p> <p>Is affected by <code>itemScaling</code> as <code>itemTranslation</code> happens afterward.</p> <p>Can be changed later on.</p> </li> <li> <p>The scaling of the block</p> <p>Optional field.</p> <p>Default value: 1,1,1</p> <p>Can be changed later on.</p> <p>Affects <code>translation</code> as <code>scaling</code> happens beforehand.</p> <p>May screw up the positioning of existing blocks.</p> </li> <li> <p>The scaling of the item</p> <p>Optional field.</p> <p>Default value: 1,1,1</p> <p>Can be changed later on.</p> <p>Affects <code>itemTranslation</code> as <code>itemScaling</code> happens beforehand.</p> </li> <li> <p>The different states your signal has.</p> <p>Required field!</p> <p>Can be left away for backwards compatibility.If your block only requires one state: Asset  Sign</p> <p>Default value: [ \"\" ]</p> <p>Important information! StatesRemove below.</p> <p><code>\"\"</code> or <code>null</code> is a valid state.Uses texture(s) that are within the same folder as the model (*.obj).</p> <p>Can be changed later on.</p> <p>Adding new states is no issue.</p> <p>Changing the order of states may screw up existing signal logic circuits.</p> <p>Removing states may break existing blocks.</p> </li> <li> <p>The first state.</p> <p>The state corresponds to a folder with the same name containing the textures for it.</p> <p>Important information! States</p> </li> <li> <p>The last state.</p> <p>The state corresponds to a folder with the same name containing the textures for it.</p> <p>Important information! States</p> </li> <li> <p>The default state for items.</p> <p>Optional field.</p> <p>Default value: first value of <code>states</code></p> <p>The state does not have to be part of the <code>states</code> list.You could add a custom state for the item.Important information! States</p> <p>Can be changed later on.</p> </li> <li> <p>Is there a base texture for this block?</p> <p>Optional experimental field.Not recommended.</p> <p>Default value: falseAllowed values: true, false</p> <p>Can be changed later on.</p> </li> <li> <p>Default textures that are always rendered independent of the current state.</p> <p>Optional experimental field.Not recommended.</p> <p>Can be changed later on.</p> <p>Changing the name may cause the UniversalModCore cache to break.You can try to delete the <code>/cache/landofsignals/</code> folder in your minecraft instance.</p> </li> </ol>"},{"location":"ContentPackV2/Content/Signal/#states","title":"States","text":"<p>This is about the different states your signal can posses and how the order affects other aspects of the game.</p>"},{"location":"ContentPackV2/Content/Signal/#implementation","title":"Implementation","text":"<p>Your signal can have one or more states. Previous contentpacks (V1) had some static blocks added as signals with a single state. If you'd like to add something static as well, take a look at the Signs and Assets.</p> <p>Let's say your signal has 3 states: off, green, red.  (1)</p> <ol> <li> <p>Example signal: off, green, red</p> </li> </ol> <pre><code>my-signal/\n    green/\n        my-signal.png // (1)!\n    red/\n        my-signal.png // (2)!\n    my-signal.obj\n    my-signal.mtl\n    my-signal.png // (3)!\n</code></pre> <ol> <li> <p>This texture would look like this: green</p> <p></p> </li> <li> <p>This texture would look like this: red</p> <p></p> </li> <li> <p>This texture would look like this: off</p> <p></p> <p>This texture will be listed ingame as \"Default.\"</p> <p>This texture must always be available!</p> <p>This is not necessarily the default texture! See below.</p> </li> </ol> <pre><code>{\n    \"name\": \"My signal\",\n    \"id\": \"my-signal\",\n    \"model\": \"my-signal/my-signal.obj\",\n    \"states\": [\n        \"\", // (3)!\n        \"green\", // (1)!\n        \"red\" // (2)!\n    ],\n</code></pre> <ol> <li> <p>This texture would look like this: green</p> <p></p> </li> <li> <p>This texture would look like this: red</p> <p></p> </li> <li> <p>This texture would look like this: off</p> <p></p> <p>This texture will be listed ingame as \"Default\".</p> <p>This texture must always be available!</p> <p>This is not necessarily the default texture! See below.</p> </li> </ol>"},{"location":"ContentPackV2/Content/Signal/#sorting-priorities-and-overwriting-of-states","title":"Sorting, priorities and overwriting of states","text":"<p>The default texture is always added. Either by the creator or by the mod. The mod will add the default texture, if not already added, to the first place of the list. It can be added as <code>\"\"</code> (<code>null</code> works as well, will be transformed internally to <code>\"\"</code>)</p> <p>The order of the states will affect different things. The first state listed in your states will be used as \"itemState\" if not set otherwise in the JSON.</p> <p>Also, the first state will always be the state of placed signals, if they are not overwritten by a signalbox. When using multiple signalboxes, the signal will store every set state. The displayed state will always be the latest in the states list.</p> <p>A few examples:</p> <p>States: Off (Default), Green, Red When placed: Off Off &amp; Green active -&gt; Green Green &amp; Red active -&gt; Red Off &amp; Green &amp; Red active -&gt; Red</p> <p>States: Green, Red, Off (Default) When placed: Green Off &amp; Green active -&gt; Off Green &amp; Red active -&gt; Red Off &amp; Green &amp; Red active -&gt; Off</p> <p>Priority</p> <p> Lowest - Off  Second - Green  Highest - Red</p> <p>The order of states can be changed individually with a click on the signal block.</p>"},{"location":"ContentPackV2/Content/Signal/#flares","title":"Flares","text":"<ul> <li> <p> Flares (optional, nice to have)</p> <p> </p> <p>If your model contains lamps or other parts that are supposed to glow, this is the right place. Flares are oriented to your models and light up when the right state is set. They can be added to signals, complex signals, deco/assets, signs and levers.</p> <p> Flare documentation</p> </li> </ul>"}]}